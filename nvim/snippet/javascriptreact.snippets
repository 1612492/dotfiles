snippet imp
import ${2:moduleName} from '${1:module}'$0
endsnippet

snippet imn
import '${1:module}'$0
endsnippet

snippet imd
import { $2 } from '${1:module}'$0
endsnippet

snippet ime
import * as ${2:alias} from '${1:module}'$0
endsnippet

snippet ima
import { ${2:originalName} as ${3:alias} } from '${1:module}'$0
endsnippet

snippet exp
export default $1$0
endsnippet

snippet exd
export { $2 } from '${1:module}'$0
endsnippet

snippet exa
export { ${2:originalName} as ${3:alias} } from '${1:module}'$0
endsnippet

snippet enf "Export named function in ES7 syntax"
export const ${1:functionName} = (${2:params}) => {
	$0
}
endsnippet

snippet edf "Export default function in ES7 syntax"
export default (${1:params}) => {
	$0
}
endsnippet

snippet fre "Creates a forEach statement in ES7 syntax"
${1:array}.forEach(${2:currentItem} => {
	${0}
})
endsnippet

snippet fof "Iterating over property names of iterable objects"
for(let ${1:item} of ${2:object}) {
	${0}
}
endsnippet

snippet fin "Iterating over property values of iterable objects"
for(let ${1:item} in ${2:object}) {
	${0}
}
endsnippet

snippet anfn "Creates an anonymous function in ES7 syntax"
(${1:params}) => {
	${2}
}
endsnippet

snippet nfn "Creates a named function in ES7 syntax"
const ${1:name} = (${2:params}) => {
	${3}
}
endsnippet

snippet dob "Creates and assigns a local variable using object destructing"
const {${1:propertyName}} = ${2:objectToDestruct}
endsnippet

snippet dar "Creates and assigns a local variable using array destructing"
const [${1:propertyName}] = ${2:arrayToDestruct}
endsnippet

snippet clg "Displays a message in the console"
console.log(${1:object})
endsnippet

snippet rfce "Creates a React Functional Component with ES7 module system"
import React from 'react'

function ${1:${TM_FILENAME_BASE}}() {
	return (
		<div>
			$0
		</div>
	)
}

export default ${2:${TM_FILENAME_BASE}}
endsnippet

snippet rfc "Creates a React Functional Component with ES7 module system"
import React from 'react'

export default function ${1:${TM_FILENAME_BASE}}() {
	return (
		<div>
			$0
		</div>
	)
}
endsnippet

snippet rafce "Creates a React Arrow Function Component with ES7 module system"
import React from 'react'

const ${1:${TM_FILENAME_BASE}} = () => {
	return (
		<div>
			$0
		</div>
	)
}

export default ${2:${TM_FILENAME_BASE}}
endsnippet

snippet rafc "Creates a React Arrow Function Component with ES7 module system"
import React from 'react'

export const ${1:${TM_FILENAME_BASE}} = () => {
	return (
		<div>
			$0
		</div>
	)
}
endsnippet

snippet rnfe
import React from 'react'
import { View, Text } from 'react-native'

const ${1:${TM_FILENAME_BASE}} = () => {
	return (
		<View>
			<Text>$0</Text>
		</View>
	)
}

export default ${2:${TM_FILENAME_BASE}}

endsnippet

snippet rnfes
import React from 'react'
import { StyleSheet, Text, View } from 'react-native'

const ${1:${TM_FILENAME_BASE}} = () => {
	return (
		<View>
			<Text>$0</Text>
		</View>
	)
}

export default ${2:${TM_FILENAME_BASE}}

const styles = StyleSheet.create({})

endsnippet

snippet rnf
import React from 'react'
import { View, Text } from 'react-native'

export default function ${1:${TM_FILENAME_BASE}}() {
	return (
		<View>
			<Text>$0</Text>
		</View>
	)
}

endsnippet

snippet rnfs
import React from 'react'
import { StyleSheet, Text, View } from 'react-native'

export default function ${1:${TM_FILENAME_BASE}}() {
	return (
		<View>
			<Text>$0</Text>
		</View>
	)
}

const styles = StyleSheet.create({})

endsnippet

snippet imrn
import { ${1:moduleName} } from 'react-native'
endsnippet

snippet rnstyle
const styles = StyleSheet.create({
	${1:style}
})

endsnippet

snippet tit "Testing `it` block"
it('should $1', () => {
	$0
})

endsnippet

snippet tita "Testing asynchronous `it` block"
it('should $1', async () => {
	$0
})

endsnippet
