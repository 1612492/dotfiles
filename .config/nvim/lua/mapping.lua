vim.g.mapleader = " "

function map(mode, key, cmd, opts)
  opts = opts or { noremap=true, silent=true }
  vim.api.nvim_set_keymap(mode, key, cmd, opts)
end

map("n","<leader>e",":NvimTreeToggle<CR>")
map("n", "gd", "<cmd>lua vim.lsp.buf.definition()<CR>")
map("n", "gD", "<cmd>lua vim.lsp.buf.declaration()<CR>")
map("n", "gi", "<cmd>lua vim.lsp.buf.implementation()<CR>")
map("n", "gr", "<cmd>lua vim.lsp.buf.references()<CR>")
map("n", "gf", "<cmd>lua vim.lsp.buf.formatting()<CR>")
map("n", "K", "<cmd>lua vim.lsp.buf.hover()<CR>")
map("n", "[d", "<cmd>lua vim.lsp.diagnostic.goto_prev()<CR>")
map("n", "]d", "<cmd>lua vim.lsp.diagnostic.goto_next()<CR>")
map("n", "<leader>rn", "<cmd>lua vim.lsp.buf.rename()<CR>")
map("n", "<leader>a", "<cmd>lua vim.lsp.buf.code_action()<CR>")
map("n", "<leader>q", "<cmd>lua vim.lsp.diagnostic.set_loclist()<CR>")
map("n", "<leader>i", "<cmd>lua require('neogit').open()<CR>")
map("n", "<leader>f", "<cmd>lua require('telescope.builtin').find_files()<CR>")
map("n", "<leader>g", "<cmd>lua require('telescope.builtin').live_grep()<CR>")
map("n", "<leader>b", "<cmd>lua require('telescope.builtin').buffers()<CR>")
map("n", "<leader>1", "<cmd>lua require('bufferline').go_to_buffer(1)<CR>")
map("n", "<leader>2", "<cmd>lua require('bufferline').go_to_buffer(2)<CR>")
map("n", "<leader>3", "<cmd>lua require('bufferline').go_to_buffer(3)<CR>")
map("n", "<leader>4", "<cmd>lua require('bufferline').go_to_buffer(4)<CR>")
map("n", "<leader>5", "<cmd>lua require('bufferline').go_to_buffer(5)<CR>")
map("n", "<leader>6", "<cmd>lua require('bufferline').go_to_buffer(6)<CR>")
map("n", "<leader>7", "<cmd>lua require('bufferline').go_to_buffer(7)<CR>")
map("n", "<leader>8", "<cmd>lua require('bufferline').go_to_buffer(8)<CR>")
map("n", "<leader>9", "<cmd>lua require('bufferline').go_to_buffer(9)<CR>")
map("n", "<leader>0", "<cmd>lua require('bufferline').go_to_buffer(10)<CR>")
map("i", "<c-j>", "vsnip#available(1) ? '<Plug>(vsnip-expand-or-jump)' : '<C-j>'", { expr = true })
