vim.g.mapleader = " "

function map(mode, key, cmd, opts)
  opts = opts or { noremap=true, silent=true }
  vim.api.nvim_set_keymap(mode, key, cmd, opts)
end

map("n", "gd",        "<cmd>lua vim.lsp.buf.definition()<CR>")
map("n", "gD",        "<cmd>lua vim.lsp.buf.declaration()<CR>")
map("n", "gi",        "<cmd>lua vim.lsp.buf.implementation()<CR>")
map("n", "gr",        "<cmd>lua vim.lsp.buf.references()<CR>")
map("n", "gf",        "<cmd>lua vim.lsp.buf.formatting()<CR>")
map("n", "K",         "<cmd>lua vim.lsp.buf.hover()<CR>")
map("n", "[d",        "<cmd>lua vim.lsp.diagnostic.goto_prev({ popup_opts = { border = 'single' } })<CR>")
map("n", "]d",        "<cmd>lua vim.lsp.diagnostic.goto_next({ popup_opts = { border = 'single' } })<CR>")
map("n", "<leader>e", ":NvimTreeToggle<CR>")
map("n", "<leader>a", "<cmd>lua vim.lsp.buf.code_action()<CR>")
map("n", "<leader>q", "<cmd>lua vim.lsp.diagnostic.set_loclist()<CR>")
map("n", "<leader>i", "<cmd>lua require('neogit').open()<CR>")
map("n", "<leader>f", "<cmd>lua require('telescope.builtin').find_files()<CR>")
map("n", "<leader>g", "<cmd>lua require('telescope.builtin').live_grep()<CR>")
map("n", "<leader>p", "<cmd>lua require('telescope').extensions.project.project{}<CR>")
map("n", "<leader>1", ":BufferGoto 1<CR>")
map("n", "<leader>2", ":BufferGoto 2<CR>")
map("n", "<leader>3", ":BufferGoto 3<CR>")
map("n", "<leader>4", ":BufferGoto 4<CR>")
map("n", "<leader>5", ":BufferGoto 5<CR>")
map("n", "<leader>6", ":BufferGoto 6<CR>")
map("n", "<leader>7", ":BufferGoto 7<CR>")
map("n", "<leader>8", ":BufferGoto 8<CR>")
map("n", "<leader>9", ":BufferGoto 9<CR>")
map("n", "<leader>0", ":BufferLast<CR>")
map("n", "<leader>-", ":BufferClose<CR>")
map("n", "<leader>=", ":BufferCloseAllButCurrent<CR>")
